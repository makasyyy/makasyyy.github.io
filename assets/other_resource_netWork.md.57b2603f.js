import{_ as e,c as t,o as h,d as a}from"./app.c5ba338d.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.get和post区别","slug":"_1-get和post区别","link":"#_1-get和post区别","children":[]},{"level":2,"title":"2.post和put去呗","slug":"_2-post和put去呗","link":"#_2-post和put去呗","children":[]},{"level":2,"title":"3.常见http请求头响应头","slug":"_3-常见http请求头响应头","link":"#_3-常见http请求头响应头","children":[]},{"level":2,"title":"4. HTTP状态码304是多好还是少好","slug":"_4-http状态码304是多好还是少好","link":"#_4-http状态码304是多好还是少好","children":[]},{"level":2,"title":"5. 常见的HTTP请求方法","slug":"_5-常见的http请求方法","link":"#_5-常见的http请求方法","children":[]},{"level":2,"title":"6. OPTIONS请求方法及使用场景","slug":"_6-options请求方法及使用场景","link":"#_6-options请求方法及使用场景","children":[]},{"level":2,"title":"7. HTTP 1.0 和 HTTP 1.1 之间有哪些区别？","slug":"_7-http-1-0-和-http-1-1-之间有哪些区别","link":"#_7-http-1-0-和-http-1-1-之间有哪些区别","children":[]},{"level":2,"title":"8. HTTP 1.1 和 HTTP 2.0 的区别","slug":"_8-http-1-1-和-http-2-0-的区别","link":"#_8-http-1-1-和-http-2-0-的区别","children":[]},{"level":2,"title":"9. HTTP和HTTPS协议的区别","slug":"_9-http和https协议的区别","link":"#_9-http和https协议的区别","children":[]},{"level":2,"title":"10. GET方法URL长度限制的原因","slug":"_10-get方法url长度限制的原因","link":"#_10-get方法url长度限制的原因","children":[]},{"level":2,"title":"11. 当在浏览器中输入 Google.com 并且按下回车之后发生了什么？","slug":"_11-当在浏览器中输入-google-com-并且按下回车之后发生了什么","link":"#_11-当在浏览器中输入-google-com-并且按下回车之后发生了什么","children":[]},{"level":2,"title":"12. 对keep-alive的理解","slug":"_12-对keep-alive的理解","link":"#_12-对keep-alive的理解","children":[]},{"level":2,"title":"13. 页面有多张图片，HTTP是怎样的加载表现？","slug":"_13-页面有多张图片-http是怎样的加载表现","link":"#_13-页面有多张图片-http是怎样的加载表现","children":[]},{"level":2,"title":"14. HTTP2的头部压缩算法是怎样的？","slug":"_14-http2的头部压缩算法是怎样的","link":"#_14-http2的头部压缩算法是怎样的","children":[]},{"level":2,"title":"15. HTTP请求报文的是什么样的？","slug":"_15-http请求报文的是什么样的","link":"#_15-http请求报文的是什么样的","children":[]},{"level":2,"title":"16. HTTP响应报文的是什么样的？","slug":"_16-http响应报文的是什么样的","link":"#_16-http响应报文的是什么样的","children":[]},{"level":2,"title":"17. HTTP协议的优点和缺点","slug":"_17-http协议的优点和缺点","link":"#_17-http协议的优点和缺点","children":[]},{"level":2,"title":"18. 说一下HTTP 3.0","slug":"_18-说一下http-3-0","link":"#_18-说一下http-3-0","children":[]},{"level":2,"title":"19. HTTP协议的性能怎么样","slug":"_19-http协议的性能怎么样","link":"#_19-http协议的性能怎么样","children":[]},{"level":2,"title":"20. URL有哪些组成部分","slug":"_20-url有哪些组成部分","link":"#_20-url有哪些组成部分","children":[]},{"level":2,"title":"21. 与缓存相关的HTTP请求头有哪些","slug":"_21-与缓存相关的http请求头有哪些","link":"#_21-与缓存相关的http请求头有哪些","children":[]},{"level":2,"title":"22.什么是HTTPS协议？","slug":"_22-什么是https协议","link":"#_22-什么是https协议","children":[]},{"level":2,"title":"23. TLS/SSL的工作原理","slug":"_23-tls-ssl的工作原理","link":"#_23-tls-ssl的工作原理","children":[]},{"level":2,"title":"24.数字证书是什么？","slug":"_24-数字证书是什么","link":"#_24-数字证书是什么","children":[]},{"level":2,"title":"25. HTTPS通信（握手）过程","slug":"_25-https通信-握手-过程","link":"#_25-https通信-握手-过程","children":[]},{"level":2,"title":"26.HTTPS的特点","slug":"_26-https的特点","link":"#_26-https的特点","children":[]},{"level":2,"title":"27.HTTPS是如何保证安全的？","slug":"_27-https是如何保证安全的","link":"#_27-https是如何保证安全的","children":[]},{"level":2,"title":"28.HTTP状态码","slug":"_28-http状态码","link":"#_28-http状态码","children":[]},{"level":2,"title":"29.DNS 协议是什么","slug":"_29-dns-协议是什么","link":"#_29-dns-协议是什么","children":[]},{"level":2,"title":"30.DNS同时使用TCP和UDP协议？","slug":"_30-dns同时使用tcp和udp协议","link":"#_30-dns同时使用tcp和udp协议","children":[]},{"level":2,"title":"31. DNS完整的查询过程","slug":"_31-dns完整的查询过程","link":"#_31-dns完整的查询过程","children":[]},{"level":2,"title":"32.迭代查询与递归查询","slug":"_32-迭代查询与递归查询","link":"#_32-迭代查询与递归查询","children":[]},{"level":2,"title":"33.DNS 记录和报文","slug":"_33-dns-记录和报文","link":"#_33-dns-记录和报文","children":[]},{"level":2,"title":"34.OSI七层模型","slug":"_34-osi七层模型","link":"#_34-osi七层模型","children":[]},{"level":2,"title":"35.TCP/IP五层协议","slug":"_35-tcp-ip五层协议","link":"#_35-tcp-ip五层协议","children":[]},{"level":2,"title":"36.TCP 和 UDP的概念及特点","slug":"_36-tcp-和-udp的概念及特点","link":"#_36-tcp-和-udp的概念及特点","children":[]},{"level":2,"title":"37.TCP和UDP的区别","slug":"_37-tcp和udp的区别","link":"#_37-tcp和udp的区别","children":[]},{"level":2,"title":"38.TCP和UDP的使用场景","slug":"_38-tcp和udp的使用场景","link":"#_38-tcp和udp的使用场景","children":[]},{"level":2,"title":"39.UDP协议为什么不可靠？","slug":"_39-udp协议为什么不可靠","link":"#_39-udp协议为什么不可靠","children":[]},{"level":2,"title":"40.TCP的重传机制","slug":"_40-tcp的重传机制","link":"#_40-tcp的重传机制","children":[]},{"level":2,"title":"41.TCP的拥塞控制机制","slug":"_41-tcp的拥塞控制机制","link":"#_41-tcp的拥塞控制机制","children":[]},{"level":2,"title":"42.TCP的流量控制机制","slug":"_42-tcp的流量控制机制","link":"#_42-tcp的流量控制机制","children":[]},{"level":2,"title":"43.TCP的可靠传输机制","slug":"_43-tcp的可靠传输机制","link":"#_43-tcp的可靠传输机制","children":[]},{"level":2,"title":"44. TCP的三次握手和四次挥手","slug":"_44-tcp的三次握手和四次挥手","link":"#_44-tcp的三次握手和四次挥手","children":[]},{"level":2,"title":"45.TCP粘包是怎么回事，如何处理**?**","slug":"_45-tcp粘包是怎么回事-如何处理","link":"#_45-tcp粘包是怎么回事-如何处理","children":[]},{"level":2,"title":"46.为什么udp不会粘包？","slug":"_46-为什么udp不会粘包","link":"#_46-为什么udp不会粘包","children":[]},{"level":2,"title":"47.对 WebSocket 的理解","slug":"_47-对-websocket-的理解","link":"#_47-对-websocket-的理解","children":[]},{"level":2,"title":"48.即时通讯的实现：短轮询、长轮询、SSE 和 WebSocket 间的区别？","slug":"_48-即时通讯的实现-短轮询、长轮询、sse-和-websocket-间的区别","link":"#_48-即时通讯的实现-短轮询、长轮询、sse-和-websocket-间的区别","children":[]}],"relativePath":"other/resource/netWork.md","lastUpdated":1681057630000}'),l={name:"other/resource/netWork.md"},i=a('<h2 id="_1-get和post区别" tabindex="-1">1.get和post区别 <a class="header-anchor" href="#_1-get和post区别" aria-hidden="true">#</a></h2><h2 id="_2-post和put去呗" tabindex="-1">2.post和put去呗 <a class="header-anchor" href="#_2-post和put去呗" aria-hidden="true">#</a></h2><h2 id="_3-常见http请求头响应头" tabindex="-1">3.常见http请求头响应头 <a class="header-anchor" href="#_3-常见http请求头响应头" aria-hidden="true">#</a></h2><h2 id="_4-http状态码304是多好还是少好" tabindex="-1">4. HTTP状态码304是多好还是少好 <a class="header-anchor" href="#_4-http状态码304是多好还是少好" aria-hidden="true">#</a></h2><h2 id="_5-常见的http请求方法" tabindex="-1">5. 常见的HTTP请求方法 <a class="header-anchor" href="#_5-常见的http请求方法" aria-hidden="true">#</a></h2><h2 id="_6-options请求方法及使用场景" tabindex="-1">6. OPTIONS请求方法及使用场景 <a class="header-anchor" href="#_6-options请求方法及使用场景" aria-hidden="true">#</a></h2><h2 id="_7-http-1-0-和-http-1-1-之间有哪些区别" tabindex="-1">7. HTTP 1.0 和 HTTP 1.1 之间有哪些区别？ <a class="header-anchor" href="#_7-http-1-0-和-http-1-1-之间有哪些区别" aria-hidden="true">#</a></h2><h2 id="_8-http-1-1-和-http-2-0-的区别" tabindex="-1">8. HTTP 1.1 和 HTTP 2.0 的区别 <a class="header-anchor" href="#_8-http-1-1-和-http-2-0-的区别" aria-hidden="true">#</a></h2><h2 id="_9-http和https协议的区别" tabindex="-1">9. HTTP和HTTPS协议的区别 <a class="header-anchor" href="#_9-http和https协议的区别" aria-hidden="true">#</a></h2><h2 id="_10-get方法url长度限制的原因" tabindex="-1">10. GET方法URL长度限制的原因 <a class="header-anchor" href="#_10-get方法url长度限制的原因" aria-hidden="true">#</a></h2><h2 id="_11-当在浏览器中输入-google-com-并且按下回车之后发生了什么" tabindex="-1">11. 当在浏览器中输入 <a href="http://Google.com" target="_blank" rel="noreferrer">Google.com</a> 并且按下回车之后发生了什么？ <a class="header-anchor" href="#_11-当在浏览器中输入-google-com-并且按下回车之后发生了什么" aria-hidden="true">#</a></h2><h2 id="_12-对keep-alive的理解" tabindex="-1">12. 对keep-alive的理解 <a class="header-anchor" href="#_12-对keep-alive的理解" aria-hidden="true">#</a></h2><h2 id="_13-页面有多张图片-http是怎样的加载表现" tabindex="-1">13. 页面有多张图片，HTTP是怎样的加载表现？ <a class="header-anchor" href="#_13-页面有多张图片-http是怎样的加载表现" aria-hidden="true">#</a></h2><h2 id="_14-http2的头部压缩算法是怎样的" tabindex="-1">14. HTTP2的头部压缩算法是怎样的？ <a class="header-anchor" href="#_14-http2的头部压缩算法是怎样的" aria-hidden="true">#</a></h2><h2 id="_15-http请求报文的是什么样的" tabindex="-1">15. HTTP请求报文的是什么样的？ <a class="header-anchor" href="#_15-http请求报文的是什么样的" aria-hidden="true">#</a></h2><h2 id="_16-http响应报文的是什么样的" tabindex="-1">16. HTTP响应报文的是什么样的？ <a class="header-anchor" href="#_16-http响应报文的是什么样的" aria-hidden="true">#</a></h2><h2 id="_17-http协议的优点和缺点" tabindex="-1">17. HTTP协议的优点和缺点 <a class="header-anchor" href="#_17-http协议的优点和缺点" aria-hidden="true">#</a></h2><h2 id="_18-说一下http-3-0" tabindex="-1">18. 说一下HTTP 3.0 <a class="header-anchor" href="#_18-说一下http-3-0" aria-hidden="true">#</a></h2><h2 id="_19-http协议的性能怎么样" tabindex="-1">19. HTTP协议的性能怎么样 <a class="header-anchor" href="#_19-http协议的性能怎么样" aria-hidden="true">#</a></h2><h2 id="_20-url有哪些组成部分" tabindex="-1">20. URL有哪些组成部分 <a class="header-anchor" href="#_20-url有哪些组成部分" aria-hidden="true">#</a></h2><h2 id="_21-与缓存相关的http请求头有哪些" tabindex="-1">21. 与缓存相关的HTTP请求头有哪些 <a class="header-anchor" href="#_21-与缓存相关的http请求头有哪些" aria-hidden="true">#</a></h2><h2 id="_22-什么是https协议" tabindex="-1">22.什么是HTTPS协议？ <a class="header-anchor" href="#_22-什么是https协议" aria-hidden="true">#</a></h2><h2 id="_23-tls-ssl的工作原理" tabindex="-1">23. TLS/SSL的工作原理 <a class="header-anchor" href="#_23-tls-ssl的工作原理" aria-hidden="true">#</a></h2><h2 id="_24-数字证书是什么" tabindex="-1">24.数字证书是什么？ <a class="header-anchor" href="#_24-数字证书是什么" aria-hidden="true">#</a></h2><h2 id="_25-https通信-握手-过程" tabindex="-1">25. HTTPS通信（握手）过程 <a class="header-anchor" href="#_25-https通信-握手-过程" aria-hidden="true">#</a></h2><h2 id="_26-https的特点" tabindex="-1">26.HTTPS的特点 <a class="header-anchor" href="#_26-https的特点" aria-hidden="true">#</a></h2><h2 id="_27-https是如何保证安全的" tabindex="-1">27.HTTPS是如何保证安全的？ <a class="header-anchor" href="#_27-https是如何保证安全的" aria-hidden="true">#</a></h2><h2 id="_28-http状态码" tabindex="-1">28.HTTP状态码 <a class="header-anchor" href="#_28-http状态码" aria-hidden="true">#</a></h2><h2 id="_29-dns-协议是什么" tabindex="-1">29.DNS 协议是什么 <a class="header-anchor" href="#_29-dns-协议是什么" aria-hidden="true">#</a></h2><h2 id="_30-dns同时使用tcp和udp协议" tabindex="-1">30.DNS同时使用TCP和UDP协议？ <a class="header-anchor" href="#_30-dns同时使用tcp和udp协议" aria-hidden="true">#</a></h2><h2 id="_31-dns完整的查询过程" tabindex="-1">31. DNS完整的查询过程 <a class="header-anchor" href="#_31-dns完整的查询过程" aria-hidden="true">#</a></h2><h2 id="_32-迭代查询与递归查询" tabindex="-1">32.迭代查询与递归查询 <a class="header-anchor" href="#_32-迭代查询与递归查询" aria-hidden="true">#</a></h2><h2 id="_33-dns-记录和报文" tabindex="-1">33.DNS 记录和报文 <a class="header-anchor" href="#_33-dns-记录和报文" aria-hidden="true">#</a></h2><h2 id="_34-osi七层模型" tabindex="-1">34.OSI七层模型 <a class="header-anchor" href="#_34-osi七层模型" aria-hidden="true">#</a></h2><h2 id="_35-tcp-ip五层协议" tabindex="-1">35.TCP/IP五层协议 <a class="header-anchor" href="#_35-tcp-ip五层协议" aria-hidden="true">#</a></h2><h2 id="_36-tcp-和-udp的概念及特点" tabindex="-1">36.TCP 和 UDP的概念及特点 <a class="header-anchor" href="#_36-tcp-和-udp的概念及特点" aria-hidden="true">#</a></h2><h2 id="_37-tcp和udp的区别" tabindex="-1">37.TCP和UDP的区别 <a class="header-anchor" href="#_37-tcp和udp的区别" aria-hidden="true">#</a></h2><h2 id="_38-tcp和udp的使用场景" tabindex="-1">38.TCP和UDP的使用场景 <a class="header-anchor" href="#_38-tcp和udp的使用场景" aria-hidden="true">#</a></h2><h2 id="_39-udp协议为什么不可靠" tabindex="-1">39.UDP协议为什么不可靠？ <a class="header-anchor" href="#_39-udp协议为什么不可靠" aria-hidden="true">#</a></h2><h2 id="_40-tcp的重传机制" tabindex="-1">40.TCP的重传机制 <a class="header-anchor" href="#_40-tcp的重传机制" aria-hidden="true">#</a></h2><h2 id="_41-tcp的拥塞控制机制" tabindex="-1">41.TCP的拥塞控制机制 <a class="header-anchor" href="#_41-tcp的拥塞控制机制" aria-hidden="true">#</a></h2><h2 id="_42-tcp的流量控制机制" tabindex="-1">42.TCP的流量控制机制 <a class="header-anchor" href="#_42-tcp的流量控制机制" aria-hidden="true">#</a></h2><h2 id="_43-tcp的可靠传输机制" tabindex="-1">43.TCP的可靠传输机制 <a class="header-anchor" href="#_43-tcp的可靠传输机制" aria-hidden="true">#</a></h2><h2 id="_44-tcp的三次握手和四次挥手" tabindex="-1">44. TCP的三次握手和四次挥手 <a class="header-anchor" href="#_44-tcp的三次握手和四次挥手" aria-hidden="true">#</a></h2><h2 id="_45-tcp粘包是怎么回事-如何处理" tabindex="-1">45.TCP粘包是怎么回事，如何处理**?** <a class="header-anchor" href="#_45-tcp粘包是怎么回事-如何处理" aria-hidden="true">#</a></h2><h2 id="_46-为什么udp不会粘包" tabindex="-1">46.为什么udp不会粘包？ <a class="header-anchor" href="#_46-为什么udp不会粘包" aria-hidden="true">#</a></h2><h2 id="_47-对-websocket-的理解" tabindex="-1">47.对 WebSocket 的理解 <a class="header-anchor" href="#_47-对-websocket-的理解" aria-hidden="true">#</a></h2><h2 id="_48-即时通讯的实现-短轮询、长轮询、sse-和-websocket-间的区别" tabindex="-1">48.即时通讯的实现：短轮询、长轮询、SSE 和 WebSocket 间的区别？ <a class="header-anchor" href="#_48-即时通讯的实现-短轮询、长轮询、sse-和-websocket-间的区别" aria-hidden="true">#</a></h2>',48),d=[i];function r(n,s,c,_,p,u){return h(),t("div",null,d)}const P=e(l,[["render",r]]);export{T as __pageData,P as default};
