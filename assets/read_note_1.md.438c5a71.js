import{_ as e,c as i,o as l,d as a}from"./app.c5ba338d.js";const u=JSON.parse('{"title":"随笔小记录1","description":"","frontmatter":{},"headers":[{"level":2,"title":"优化代码中冗余的if-else","slug":"优化代码中冗余的if-else","link":"#优化代码中冗余的if-else","children":[]}],"relativePath":"read/note_1.md","lastUpdated":1679303505000}'),t={name:"read/note_1.md"},s=a('<h1 id="随笔小记录1" tabindex="-1">随笔小记录1 <a class="header-anchor" href="#随笔小记录1" aria-hidden="true">#</a></h1><h2 id="优化代码中冗余的if-else" tabindex="-1">优化代码中冗余的if-else <a class="header-anchor" href="#优化代码中冗余的if-else" aria-hidden="true">#</a></h2><ol><li>单个if优化- ?.或三元表达式</li><li>单个if多个条件优化- 数组,includes判断</li><li>多个if优化 <ol><li>switch改写-相比if-else可读性提高了很多，但代码量还是很多</li><li>object，key-value形式，使用键值对象存储条件和操作之间的关系、</li><li>Map,相比object，Map优点：就是策略模式 <ol><li>对象的键只能是字符串或符号，Map的键可以是任何类型的值</li><li>可以使用Map 的 size属性获取Map的键值对的数量，而对象的键值对数量需要手动确定</li><li>相比object、具有极快的查找速度</li><li>对于多层复杂场景，Map也更具有优势</li></ol></li></ol></li></ol>',3),o=[s];function r(n,_,c,d,f,h){return l(),i("div",null,o)}const m=e(t,[["render",r]]);export{u as __pageData,m as default};
