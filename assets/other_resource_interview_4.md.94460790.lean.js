import{_ as s,c as n,o as a,d as l}from"./app.c5ba338d.js";const C=JSON.parse('{"title":"newcoder","description":"","frontmatter":{},"headers":[{"level":2,"title":"HTML","slug":"html","link":"#html","children":[]},{"level":2,"title":"一、数据类型","slug":"一、数据类型","link":"#一、数据类型","children":[{"level":3,"title":"1. JavaScript有哪些数据类型，它们的区别？","slug":"_1-javascript有哪些数据类型-它们的区别","link":"#_1-javascript有哪些数据类型-它们的区别","children":[]},{"level":3,"title":"2. 数据类型检测的方式有哪些","slug":"_2-数据类型检测的方式有哪些","link":"#_2-数据类型检测的方式有哪些","children":[]},{"level":3,"title":"3. 判断数组的方式有哪些","slug":"_3-判断数组的方式有哪些","link":"#_3-判断数组的方式有哪些","children":[]},{"level":3,"title":"4. null和undefined区别","slug":"_4-null和undefined区别","link":"#_4-null和undefined区别","children":[]},{"level":3,"title":"5. typeof null 的结果是什么，为什么？","slug":"_5-typeof-null-的结果是什么-为什么","link":"#_5-typeof-null-的结果是什么-为什么","children":[]},{"level":3,"title":"6. intanceof 操作符的实现原理及实现","slug":"_6-intanceof-操作符的实现原理及实现","link":"#_6-intanceof-操作符的实现原理及实现","children":[]},{"level":3,"title":"7. 为什么0.1+0.2 ! == 0.3，如何让其相等","slug":"_7-为什么0-1-0-2-0-3-如何让其相等","link":"#_7-为什么0-1-0-2-0-3-如何让其相等","children":[]},{"level":3,"title":"8. 如何获取安全的 undefined 值？","slug":"_8-如何获取安全的-undefined-值","link":"#_8-如何获取安全的-undefined-值","children":[]},{"level":3,"title":"9. typeof NaN 的结果是什么？","slug":"_9-typeof-nan-的结果是什么","link":"#_9-typeof-nan-的结果是什么","children":[]},{"level":3,"title":"10. isNaN 和 Number.isNaN 函数的区别？","slug":"_10-isnan-和-number-isnan-函数的区别","link":"#_10-isnan-和-number-isnan-函数的区别","children":[]},{"level":3,"title":"11. == 操作符的强制类型转换规则？","slug":"_11-操作符的强制类型转换规则","link":"#_11-操作符的强制类型转换规则","children":[]},{"level":3,"title":"12. 其他值到字符串的转换规则？","slug":"_12-其他值到字符串的转换规则","link":"#_12-其他值到字符串的转换规则","children":[]},{"level":3,"title":"13. 其他值到数字值的转换规则？","slug":"_13-其他值到数字值的转换规则","link":"#_13-其他值到数字值的转换规则","children":[]},{"level":3,"title":"14. 其他值到布尔类型的值的转换规则？","slug":"_14-其他值到布尔类型的值的转换规则","link":"#_14-其他值到布尔类型的值的转换规则","children":[]},{"level":3,"title":"15. || 和 && 操作符的返回值？","slug":"_15-和-操作符的返回值","link":"#_15-和-操作符的返回值","children":[]},{"level":3,"title":"16. Object.is() 与比较操作符 ===、== 的区别？","slug":"_16-object-is-与比较操作符-、-的区别","link":"#_16-object-is-与比较操作符-、-的区别","children":[]},{"level":3,"title":"17. 什么是 JavaScript 中的包装类型？","slug":"_17-什么是-javascript-中的包装类型","link":"#_17-什么是-javascript-中的包装类型","children":[]},{"level":3,"title":"18. JavaScript 中如何进行隐式类型转换？","slug":"_18-javascript-中如何进行隐式类型转换","link":"#_18-javascript-中如何进行隐式类型转换","children":[]},{"level":3,"title":"19. + 操作符什么时候用于字符串的拼接？","slug":"_19-操作符什么时候用于字符串的拼接","link":"#_19-操作符什么时候用于字符串的拼接","children":[]},{"level":3,"title":"20. 为什么会有BigInt的提案？","slug":"_20-为什么会有bigint的提案","link":"#_20-为什么会有bigint的提案","children":[]},{"level":3,"title":"21. object.assign和扩展运算法是深拷贝还是浅拷贝，浅拷贝与深拷贝的区别","slug":"_21-object-assign和扩展运算法是深拷贝还是浅拷贝-浅拷贝与深拷贝的区别","link":"#_21-object-assign和扩展运算法是深拷贝还是浅拷贝-浅拷贝与深拷贝的区别","children":[]}]},{"level":2,"title":"二、ES6","slug":"二、es6","link":"#二、es6","children":[{"level":3,"title":"1. let、const、var的区别","slug":"_1-let、const、var的区别","link":"#_1-let、const、var的区别","children":[]},{"level":3,"title":"2. const对象的属性可以修改吗","slug":"_2-const对象的属性可以修改吗","link":"#_2-const对象的属性可以修改吗","children":[]},{"level":3,"title":"3. 如果new一个箭头函数会怎么样","slug":"_3-如果new一个箭头函数会怎么样","link":"#_3-如果new一个箭头函数会怎么样","children":[]},{"level":3,"title":"4. 箭头函数与普通函数的区别","slug":"_4-箭头函数与普通函数的区别","link":"#_4-箭头函数与普通函数的区别","children":[]},{"level":3,"title":"5. 箭头函数的this指向哪⾥？","slug":"_5-箭头函数的this指向哪里","link":"#_5-箭头函数的this指向哪里","children":[]},{"level":3,"title":"6. 扩展运算符的作用及使用场景","slug":"_6-扩展运算符的作用及使用场景","link":"#_6-扩展运算符的作用及使用场景","children":[]},{"level":3,"title":"7. Proxy 可以实现什么功能？","slug":"_7-proxy-可以实现什么功能","link":"#_7-proxy-可以实现什么功能","children":[]},{"level":3,"title":"8. 对对象与数组的解构的理解","slug":"_8-对对象与数组的解构的理解","link":"#_8-对对象与数组的解构的理解","children":[]},{"level":3,"title":"9. 如何提取高度嵌套的对象里的指定属性？","slug":"_9-如何提取高度嵌套的对象里的指定属性","link":"#_9-如何提取高度嵌套的对象里的指定属性","children":[]},{"level":3,"title":"10. 对 rest 参数的理解","slug":"_10-对-rest-参数的理解","link":"#_10-对-rest-参数的理解","children":[]},{"level":3,"title":"11. ES6中模板语法与字符串处理","slug":"_11-es6中模板语法与字符串处理","link":"#_11-es6中模板语法与字符串处理","children":[]}]},{"level":2,"title":"三、JavaScript基础","slug":"三、javascript基础","link":"#三、javascript基础","children":[{"level":3,"title":"1. new操作符的实现原理","slug":"_1-new操作符的实现原理","link":"#_1-new操作符的实现原理","children":[]},{"level":3,"title":"2. map和Object的区别---了解即可","slug":"_2-map和object的区别-了解即可","link":"#_2-map和object的区别-了解即可","children":[]},{"level":3,"title":"3. map和weakMap的区别---了解即可","slug":"_3-map和weakmap的区别-了解即可","link":"#_3-map和weakmap的区别-了解即可","children":[]},{"level":3,"title":"4. JavaScript有哪些内置对象","slug":"_4-javascript有哪些内置对象","link":"#_4-javascript有哪些内置对象","children":[]},{"level":3,"title":"5. 常用的正则表达式有哪些？","slug":"_5-常用的正则表达式有哪些","link":"#_5-常用的正则表达式有哪些","children":[]},{"level":3,"title":"6. 对JSON的理解---了解即可","slug":"_6-对json的理解-了解即可","link":"#_6-对json的理解-了解即可","children":[]},{"level":3,"title":"7. JavaScript脚本延迟加载的方式有哪些？","slug":"_7-javascript脚本延迟加载的方式有哪些","link":"#_7-javascript脚本延迟加载的方式有哪些","children":[]},{"level":3,"title":"8. JavaScript 类数组对象的定义？","slug":"_8-javascript-类数组对象的定义","link":"#_8-javascript-类数组对象的定义","children":[]},{"level":3,"title":"9. 数组有哪些原生方法？","slug":"_9-数组有哪些原生方法","link":"#_9-数组有哪些原生方法","children":[]},{"level":3,"title":"10. Unicode、UTF-8、UTF-16、UTF-32的区别？---了解即可","slug":"_10-unicode、utf-8、utf-16、utf-32的区别-了解即可","link":"#_10-unicode、utf-8、utf-16、utf-32的区别-了解即可","children":[]},{"level":3,"title":"11. 常见的位运算符有哪些？其计算规则是什么？---了解即可","slug":"_11-常见的位运算符有哪些-其计算规则是什么-了解即可","link":"#_11-常见的位运算符有哪些-其计算规则是什么-了解即可","children":[]},{"level":3,"title":"12. 为什么函数的 arguments 参数是类数组而不是数组？如何遍历类数组?","slug":"_12-为什么函数的-arguments-参数是类数组而不是数组-如何遍历类数组","link":"#_12-为什么函数的-arguments-参数是类数组而不是数组-如何遍历类数组","children":[]},{"level":3,"title":"13. 什么是 DOM 和 BOM？","slug":"_13-什么是-dom-和-bom","link":"#_13-什么是-dom-和-bom","children":[]},{"level":3,"title":"14. 对类数组对象的理解，如何转化为数组","slug":"_14-对类数组对象的理解-如何转化为数组","link":"#_14-对类数组对象的理解-如何转化为数组","children":[]},{"level":3,"title":"15. escape、encodeURI、encodeURIComponent 的区别","slug":"_15-escape、encodeuri、encodeuricomponent-的区别","link":"#_15-escape、encodeuri、encodeuricomponent-的区别","children":[]},{"level":3,"title":"16. 对AJAX的理解，实现一个AJAX请求","slug":"_16-对ajax的理解-实现一个ajax请求","link":"#_16-对ajax的理解-实现一个ajax请求","children":[]},{"level":3,"title":"17. JavaScript为什么要进行变量提升，它导致了什么问题？","slug":"_17-javascript为什么要进行变量提升-它导致了什么问题","link":"#_17-javascript为什么要进行变量提升-它导致了什么问题","children":[]},{"level":3,"title":"18. 什么是尾调用，使用尾调用有什么好处？","slug":"_18-什么是尾调用-使用尾调用有什么好处","link":"#_18-什么是尾调用-使用尾调用有什么好处","children":[]},{"level":3,"title":"19.  ES6模块与CommonJS模块有什么异同？","slug":"_19-es6模块与commonjs模块有什么异同","link":"#_19-es6模块与commonjs模块有什么异同","children":[]},{"level":3,"title":"20. 常见的DOM操作有哪些","slug":"_20-常见的dom操作有哪些","link":"#_20-常见的dom操作有哪些","children":[]},{"level":3,"title":"21. use strict是什么意思 ? 使用它区别是什么？","slug":"_21-use-strict是什么意思-使用它区别是什么","link":"#_21-use-strict是什么意思-使用它区别是什么","children":[]},{"level":3,"title":"22. 如何判断一个对象是否属于某个类？","slug":"_22-如何判断一个对象是否属于某个类","link":"#_22-如何判断一个对象是否属于某个类","children":[]},{"level":3,"title":"23. 强类型语言和弱类型语言的区别","slug":"_23-强类型语言和弱类型语言的区别","link":"#_23-强类型语言和弱类型语言的区别","children":[]},{"level":3,"title":"24. 解释性语言和编译型语言的区别---了解即可","slug":"_24-解释性语言和编译型语言的区别-了解即可","link":"#_24-解释性语言和编译型语言的区别-了解即可","children":[]},{"level":3,"title":"25. for...in和for...of的区别","slug":"_25-for-in和for-of的区别","link":"#_25-for-in和for-of的区别","children":[]},{"level":3,"title":"26. 如何使用for...of遍历对象","slug":"_26-如何使用for-of遍历对象","link":"#_26-如何使用for-of遍历对象","children":[]},{"level":3,"title":"27. ajax、axios、fetch的区别","slug":"_27-ajax、axios、fetch的区别","link":"#_27-ajax、axios、fetch的区别","children":[]},{"level":3,"title":"28. 数组的遍历方法有哪些","slug":"_28-数组的遍历方法有哪些","link":"#_28-数组的遍历方法有哪些","children":[]},{"level":3,"title":"29. forEach和map方法有什么区别","slug":"_29-foreach和map方法有什么区别","link":"#_29-foreach和map方法有什么区别","children":[]}]},{"level":2,"title":"四、原型与原型链","slug":"四、原型与原型链","link":"#四、原型与原型链","children":[{"level":3,"title":"1. 对原型、原型链的理解","slug":"_1-对原型、原型链的理解","link":"#_1-对原型、原型链的理解","children":[]},{"level":3,"title":"2. 原型修改、重写","slug":"_2-原型修改、重写","link":"#_2-原型修改、重写","children":[]},{"level":3,"title":"3. 原型链指向","slug":"_3-原型链指向","link":"#_3-原型链指向","children":[]},{"level":3,"title":"4. 原型链的终点是什么？如何打印出原型链的终点？","slug":"_4-原型链的终点是什么-如何打印出原型链的终点","link":"#_4-原型链的终点是什么-如何打印出原型链的终点","children":[]},{"level":3,"title":"5. 如何获得对象非原型链上的属性？","slug":"_5-如何获得对象非原型链上的属性","link":"#_5-如何获得对象非原型链上的属性","children":[]}]},{"level":2,"title":"五、执行上下文/作用域链/闭包","slug":"五、执行上下文-作用域链-闭包","link":"#五、执行上下文-作用域链-闭包","children":[{"level":3,"title":"1. 对闭包的理解","slug":"_1-对闭包的理解","link":"#_1-对闭包的理解","children":[]},{"level":3,"title":"2. 对作用域、作用域链的理解","slug":"_2-对作用域、作用域链的理解","link":"#_2-对作用域、作用域链的理解","children":[]},{"level":3,"title":"3. 对执行上下文的理解","slug":"_3-对执行上下文的理解","link":"#_3-对执行上下文的理解","children":[]}]},{"level":2,"title":"六、this/call/apply/bind","slug":"六、this-call-apply-bind","link":"#六、this-call-apply-bind","children":[{"level":3,"title":"1. 对this对象的理解","slug":"_1-对this对象的理解","link":"#_1-对this对象的理解","children":[]},{"level":3,"title":"2. call() 和 apply() 的区别？","slug":"_2-call-和-apply-的区别","link":"#_2-call-和-apply-的区别","children":[]},{"level":3,"title":"3. 实现call、apply 及 bind 函数（建议看一下鲨鱼哥的掘金手写）","slug":"_3-实现call、apply-及-bind-函数-建议看一下鲨鱼哥的掘金手写","link":"#_3-实现call、apply-及-bind-函数-建议看一下鲨鱼哥的掘金手写","children":[]}]},{"level":2,"title":"七、异步编程","slug":"七、异步编程","link":"#七、异步编程","children":[{"level":3,"title":"1. 异步编程的实现方式？","slug":"_1-异步编程的实现方式","link":"#_1-异步编程的实现方式","children":[]},{"level":3,"title":"2. setTimeout、Promise、Async/Await 的区别","slug":"_2-settimeout、promise、async-await-的区别","link":"#_2-settimeout、promise、async-await-的区别","children":[]},{"level":3,"title":"3. 对Promise的理解","slug":"_3-对promise的理解","link":"#_3-对promise的理解","children":[]},{"level":3,"title":"4. Promise的基本用法","slug":"_4-promise的基本用法","link":"#_4-promise的基本用法","children":[]},{"level":3,"title":"5. Promise解决了什么问题","slug":"_5-promise解决了什么问题","link":"#_5-promise解决了什么问题","children":[]},{"level":3,"title":"6. Promise.all和Promise.race的区别的使用场景","slug":"_6-promise-all和promise-race的区别的使用场景","link":"#_6-promise-all和promise-race的区别的使用场景","children":[]},{"level":3,"title":"7.  对async/await 的理解","slug":"_7-对async-await-的理解","link":"#_7-对async-await-的理解","children":[]},{"level":3,"title":"8. await 到底在等啥？","slug":"_8-await-到底在等啥","link":"#_8-await-到底在等啥","children":[]},{"level":3,"title":"9.  async/await的优势","slug":"_9-async-await的优势","link":"#_9-async-await的优势","children":[]},{"level":3,"title":"10. async/await对比Promise的优势","slug":"_10-async-await对比promise的优势","link":"#_10-async-await对比promise的优势","children":[]},{"level":3,"title":"11. async/await 如何捕获异常","slug":"_11-async-await-如何捕获异常","link":"#_11-async-await-如何捕获异常","children":[]},{"level":3,"title":"12. 并发与并行的区别？---了解即可","slug":"_12-并发与并行的区别-了解即可","link":"#_12-并发与并行的区别-了解即可","children":[]},{"level":3,"title":"13. 什么是回调函数？回调函数有什么缺点？如何解决回调地狱问题？","slug":"_13-什么是回调函数-回调函数有什么缺点-如何解决回调地狱问题","link":"#_13-什么是回调函数-回调函数有什么缺点-如何解决回调地狱问题","children":[]},{"level":3,"title":"14. setTimeout、setInterval、requestAnimationFrame 各有什么特点？","slug":"_14-settimeout、setinterval、requestanimationframe-各有什么特点","link":"#_14-settimeout、setinterval、requestanimationframe-各有什么特点","children":[]}]},{"level":2,"title":"八、面向对象","slug":"八、面向对象","link":"#八、面向对象","children":[{"level":3,"title":"1. 对象创建的方式有哪些？","slug":"_1-对象创建的方式有哪些","link":"#_1-对象创建的方式有哪些","children":[]},{"level":3,"title":"2. 对象继承的方式有哪些？","slug":"_2-对象继承的方式有哪些","link":"#_2-对象继承的方式有哪些","children":[]}]},{"level":2,"title":"九、垃圾回收与内存泄漏---了解即可","slug":"九、垃圾回收与内存泄漏-了解即可","link":"#九、垃圾回收与内存泄漏-了解即可","children":[{"level":3,"title":"1. 浏览器的垃圾回收机制","slug":"_1-浏览器的垃圾回收机制","link":"#_1-浏览器的垃圾回收机制","children":[]},{"level":3,"title":"2. 哪些情况会导致内存泄漏","slug":"_2-哪些情况会导致内存泄漏","link":"#_2-哪些情况会导致内存泄漏","children":[]}]}],"relativePath":"other/resource/interview_4.md","lastUpdated":1681140111000}'),p={name:"other/resource/interview_4.md"},o=l("",953),e=[o];function t(r,c,y,i,F,D){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
